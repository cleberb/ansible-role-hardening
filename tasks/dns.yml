---

- name: Populate service facts
  become: true
  ansible.builtin.service_facts:
  tags:
    - dns
    - resolved
    - systemd

- name: Get stats of /etc/resolv.conf
  become: true
  ansible.builtin.stat:
    path: /etc/resolv.conf
  register: resolv_conf
  tags:
    - dns
    - resolvconf

- name: Configure systemd resolved
  become: true
  ansible.builtin.template:
    src: "{{ resolved_conf_template }}"
    dest: /etc/systemd/resolved.conf
    backup: true
    mode: "0644"
    owner: root
    group: root
  notify:
    - Reload systemd
  when:
    - dns is defined and dns | length > 0
    - '"systemd-resolved.service" in services'
    - services["systemd-resolved.service"]["status"] == "enabled"
    - resolv_conf.stat.islnk is defined and resolv_conf.stat.islnk | bool
    - resolv_conf.stat.lnk_source is defined and resolv_conf.stat.lnk_source == "/run/systemd/resolve/stub-resolv.conf"
  tags:
    - dns
    - resolved
    - systemd
    - CCE-84049-6

- name: Get stats of /etc/NetworkManager/NetworkManager.conf
  become: true
  ansible.builtin.stat:
    path: /etc/NetworkManager/NetworkManager.conf
  register: networkmanager_conf
  tags:
    - dns
    - networkmanager

- name: Ensure Network-Manager not modify /etc/resolv.conf
  community.general.ini_file:
    path: /etc/NetworkManager/NetworkManager.conf
    section: main
    option: dns
    value: none
    no_extra_spaces: true
    create: false
  notify:
    - "Restart Network-Manager"
  when:
    - dns is defined and dns | length > 0
    - networkmanager_conf.stat.exists is defined and networkmanager_conf.stat.exists | bool
    - network_manager_dns_none is defined and network_manager_dns_none | bool
  tags:
    - dns
    - networkmanager

- name: Configure /etc/resolv.conf
  when:
    - dns is defined and dns | length > 0
    - '"systemd-resolved.service" not in services or services["systemd-resolved.service"]["status"] == "disabled"'
    - resolv_conf.stat.islnk is not defined or not ( resolv_conf.stat.islnk | bool )
  tags:
    - dns
    - resolvconf
  block:
    - name: Read /etc/NetworkManager/NetworkManager.conf
      become: true
      ansible.builtin.slurp:
        src: /etc/NetworkManager/NetworkManager.conf
      register: networkmanager_conf_content
      when:
        - '"NetworkManager.service" in services and services["NetworkManager.service"]["status"] not in ("disabled", "unknown")'

    - name: Read /etc/resolv.conf
      become: true
      ansible.builtin.slurp:
        src: /etc/resolv.conf
      register: resolv_conf_content

    - name: Add nameservers to resolv.conf
      become: true
      vars:
        networkmanager_dns: "{{ networkmanager_conf_content.content | default('') | b64decode | regex_findall('\\s*dns\\s*=\\s*(.*)') | first | default('') }}"
        dns_searchs: "{{ resolv_conf_content.content | default('') | b64decode | regex_findall('\\s*search\\s*(.*)') }}"
      ansible.builtin.template:
        src: "{{ resolv_conf_template }}"
        dest: /etc/resolv.conf
        backup: true
        mode: "0644"
        owner: root
        group: root
      when: '"NetworkManager.service" not in services or services["NetworkManager.service"]["status"] == "disabled" or networkmanager_dns == "none"'
